syntax = "proto3";

option csharp_namespace = "ToDoGrpc";

import "google/api/annotations.proto";

package todoit;

service ToDoIt{

    //===== C R U D =====//
    //--> (C)reate
    rpc CreateToDo (CreateToDoRequest) returns (CreateToDoResponse) {
        option (google.api.http) = {
            post:"/v1/todo",
            body:"*"
        };
    }

    // Read single
    rpc ReadToDo (ReadToDoRequest) returns (ReadTodoResponse) {
        // https://localhost:7117/v1/todo/2
        option (google.api.http) = {
            get:"/v1/todo/{id}"
        };
    }

    // Read list
    rpc ListToDo (GetAllRequest) returns (GetAllResponse) {
        // https://localhost:7117/vi/todo
        option (google.api.http) = {
            get: "/v1/todo"
        };
    }

    // Update
    rpc UpdateToDo (UpdateToDoRequest) returns (UpdateToDoResponse) {
        option (google.api.http) = {
            put: "/v1/todo",
            body: "*"
        };
    }

    // Delete
    rpc DeleteToDo (DeleteToDoRequest) returns (DeleteToDoRespoonse) {
        option (google.api.http) = {
            delete: "/v1/todo/{id}"
        };
    }

}

// DTO
message CreateToDoRequest {
    string title = 1;
    string description = 2;
}

message CreateToDoResponse {
    int32 id = 1;
}

message ReadToDoRequest {
    int32 id = 1;
}

message ReadTodoResponse {
    int32 id = 1;
    string title = 2;
    string description = 3;
    string to_do_status = 4;
}

message GetAllRequest {
    int32 id = 1;
    string title = 2;
    string description = 3;
    string to_do_status = 4;
}

message GetAllResponse {
    repeated ReadTodoResponse to_do = 1;
}

message UpdateToDoRequest {
    int32 id = 1;
    string title = 2;
    string description = 3;
    string to_do_status = 4;
}

message UpdateToDoResponse {
    int32 id = 1;
}

message DeleteToDoRequest {
    int32 id = 1;
}

message DeleteToDoRespoonse { int32 id = 1; }
